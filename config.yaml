# Instructions for gathering a reference genome can be found at the link below
# https://helikarlab.github.io/FastqToGeneCounts/fastq_setup_genome.html

# Modify these settings to reflect your paths
# Only change values after the colon (':')

# The CSV file to analyze
# The file should have columns in the order: srr, friendly_name, layout, and method
# For "layout", options are "PE" (paired-end sequencing) and "SE" (single-end sequencing)
# For "method", options are "total" (total RNA sequencing) and "mrna" (mRNA/PolyA RNA sequencing)
MASTER_CONTROL: "controls/master_control.csv"

# The location where results should be saved to
ROOTDIR: "results"

# The scratch location of your computer or cluster
SCRATCH_DIR: "/tmp/FastqToGeneCounts"

# If you are processing local FastQ items, set this to the location of your items
LOCAL_FASTQ_FILES: "results/dump_fastq_input"

# Quality Control Options
# Should trimming of RNA sequencing adapters be performed before aligning? (default: True)
PERFORM_TRIM: True

# Should RNA sequences be screened for contamination? (default: True)
PERFORM_SCREEN: True

# Should RNAseq metrics be collected to obtain more information about the reads? (default: True)
PERFORM_GET_RNASEQ_METRICS: True

# Prefetch SRA files before writing to FastQ (default: True)
# If you are processing local FastQ items, set to False
PERFORM_PREFETCH: False

# Get RNA information from SRA files (default: True)
# If you are processing local FastQ items, set to False
PERFORM_DUMP_FASTQ: False

# Determine insert sizes for fragment length calculation (default: True)
PERFORM_GET_INSERT_SIZE: True

# Determine fragment size; required for zFPKM calculation (default: True)
PERFORM_GET_FRAGMENT_SIZE: True

# If you are using this tool to generate files for COMO, single replicates are not allowed
# For example, a "S1R1" sample will result in an error in COMO
# If you are creating a constraint-based model with COMO, it is recommended to set this to False
# https://github.com/HelikarLab/COMO
BYPASS_REPLICATE_VALIDATION: False

# This will check that genome-related files are able to be found before starting the pipeline (default: False)
# It is recommended to not bypass this check, as errors will occur in the middle of the pipeline if these files are not found
BYPASS_GENOME_VALIDATION: False

# Benchmarks test the amount of time it takes to execute each rule on each file
# By increasing this number, you will begin to execute each rule more than once per file
# For example, if you have 1 input file, but set this to 3, that input file will go through the entire pipeline three times
BENCHMARK_TIMES: 1

# The following items dictate the location for the reference genome
GENERATE_GENOME:
  # The full path where the genome generation data should be saved (i.e., the output of `STAR --runMode genomeGenerate`)
  GENOME_SAVE_DIR: "genome/star"

  # The full input path of the genome fasta file and the GTF file
  GENOME_FASTA_FILE: "genome/Mus_musculus.GRCm39.dna.primary_assembly.fa"
  GTF_FILE: "genome/Mus_musculus.GRCm39.111.gtf"

  # RefFlat0 file location built from the GTF file for generating RNAseq metrics option
  REF_FLAT_FILE: "genome/refFlat_GRCh38.111.txt"

  # rRNA interval list file location for generating RNAseq metrics
  RRNA_INTERVAL_LIST: "genome/GRCh38.p5.rRNA.interval_list"

  # The reference BED file built from the GTF for RSEQC option
  BED_FILE: "genome/mm10_RefSeq.bed"
